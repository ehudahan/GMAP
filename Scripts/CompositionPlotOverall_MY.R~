################################################################################
############################# Composition ######################################
################################################################################
# creates composition barplot showing 10 most abundant taxa                    #



# Data
if (1) {
    rm(list = ls())
    # setwd("Volumes/ehudda/GMAP/Docs/GMAP_Paper/")
    metadata <- read.delim("Results/TSVs2/metadata.tsv",as.is = T,header = T,sep = "\t")
    # samples_list <- read.csv("Results/CSVs/OneSamplePerKikPerTimePoint.csv", header = T)$x
    # metadata <- metadata %>% filter(sampleID %in% samples_list)
    tab.n <- read.table("Results/TSVs2/FeatureTable.tsv", header = T)
    # tab.n <- tab.n.WITH.5.ex.kids[,which(names(tab.n.WITH.5.ex.kids) %in% metadata$sampleID)]
}

# constants
{
    NUM_HIGHER_TAXA <- 15
    COHORT <- "All Samples"
}

# libraries
{
    library(dplyr) # for %>%
    library(ggplot2)
    #library(vegan)
    library(tibble)
    library(ggpubr)
    library(tidyverse)
    library(RColorBrewer)
    library(reshape2) #for melt
    library(EnvStats) # stat_n_text
}


######### Melt feature table (subset.tab.n) #########################
mat <- rownames_to_column(tab.n)
mat[1:4, 1:4]
mm <- melt(mat)
head(mm)
names(mm) <- c("short.names", "sampleID", "value")
mm.metadata <- left_join(mm, metadata)
mm.metadata %>% filter(is.na(numericSampleTimeWithSick))
######################################################################


########## Find the most abundant taxa in the cohort ############
# Assumpted that: samples in columns, bacs in rows
df <- data.frame(value = sort(rowSums(tab.n), decreasing = T))
df$variable <- "sum"
df$group <- "totalAbundance"
df <- rownames_to_column(df)
df <- rename(df, c("short.names" = "rowname"))
higherTaxa <- df$short.names[1:NUM_HIGHER_TAXA]

# Add Higher Taxa to mm.metadata
mm.metadata$higherTaxa <-
    sapply(mm.metadata$short.names, function(x)
        ifelse(x %in% higherTaxa, x, "other"))
#######################################################

####### COUNTS ###########
n_all <- nrow(metadata)
n_cases <- sum(metadata$case_id == "AP Case")
n_control <- sum(metadata$case_id == "No AP")
######################### 


######### Order variables ################
mm.metadata$higherTaxa <-
    factor(mm.metadata$higherTaxa, levels = c(higherTaxa, "other"))
mm.metadata$lastDiet <-
    factor(mm.metadata$lastDiet,
           levels = c("Exclusively BF", "Partially BF", "Formula"))
mm.metadata$sampleTimeLabels <-
    factor(
        mm.metadata$numericSampleTimeWithSick,
        labels = c(
            "initial",
            "two week",
            "one month",
            "two month",
            "four month",
            "six month",
            "nine month",
            "one year"
        )
    )
mm.metadata$case_id_label <- 
    factor(
        mm.metadata$case_id,
        labels = c("AP Case" = paste0("Cases (n=",n_cases,")"), 
                   "No AP" = paste0("Control (n=",n_control,")"
                   )))
###########################################################

# Title
title <-
    paste0("Microbiota Composition - ",
           gsub("_", " ", COHORT),
           " (n=",
           n_all,
           ")")
subtitle <- "Number of kids added above each row"


####### Count number of kids in each column ############################
# the d data frame contain the number of each group of samples
d <- mm.metadata %>%
    group_by(sampleTimeLabels) %>%
    summarise(n = n(), uniqID = length(unique(sampleID)))
d$position <- 1.05

head(d)
nrow(d)

sum(d$uniqID) == n_all
################################################################

groupMetadata <- left_join(mm.metadata, d)

source("Scripts/Functions/GMAPPlotsColors.R")


######### Plot COLORS #######
colors <- c(colorGMAPDataFunction("higherTaxa")[2:(NUM_HIGHER_TAXA + 1)], "other" = "gray")
#############################
tmp_sum <- ddply(groupMetadata,c("sampleTimeLabels","higherTaxa","sampleID","uniqID","position"),summarise, sum = sum(value))
tmp_dd <- ddply(tmp_sum,c("sampleTimeLabels","higherTaxa","uniqID","position"),summarise, avg = mean(sum))

gg <- ggplot(tmp_dd, aes(x=sampleTimeLabels,y=avg,fill=higherTaxa))+
          geom_bar(position = position_fill(reverse = TRUE), stat = "identity") +
	      labs(title = title,
        x = "Sample Age",
        y = "Taxa Mean (Relative Abundance)",
        fill = paste0("Higher ", NUM_HIGHER_TAXA, " taxa")
    ) +
    scale_fill_manual(values = colors,
                      guide = guide_legend(reverse = T)) +
    geom_text(check_overlap = T,
              aes(x = sampleTimeLabels, y = position, label = uniqID)) +
    theme_bw() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1),
          panel.grid = element_blank())

ggsave("Figures/PNGs/tmp3.png",gg)



gg <-
    ggplot(groupMetadata ,
           aes(x = sampleTimeLabels, y = value, fill = higherTaxa)) +
    geom_bar(position = position_fill(reverse = TRUE), stat = "identity") +
    scale_y_continuous(labels = c(scales::percent_format()(c(0, 0.25, 0.5, 0.75, 1)),"n"),
                       breaks = c(0, 0.25, 0.5, 0.75, 1, 1.05)) +
    labs(title = title,
        x = "Sample Age",
        y = "Taxa Mean (Relative Abundance)",
        fill = paste0("Higher ", NUM_HIGHER_TAXA, " taxa")
    ) +
    scale_fill_manual(values = colors,
                      guide = guide_legend(reverse = T)) +
    geom_text(check_overlap = T,
              aes(x = sampleTimeLabels, y = position, label = uniqID)) +
    theme_bw() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1),
          panel.grid = element_blank())

gg

path <- "Figures/"
fileName <- "CompositionPlotOverall"
if (1) {
    ggsave(
        gg,
        filename = paste0(path, "PDFs/", fileName, ".pdf"),
        "pdf",
        width = 10,
        height = 7
    )
    ggsave(
        gg,
        filename = paste0(path, "PNGs/", fileName, ".png"),
        "png",
        width = 10,
        height = 7
    )
}

